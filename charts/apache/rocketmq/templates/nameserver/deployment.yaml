apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "rocketmq.nameserver.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: nameserver
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.nameserver.replicaCount }}
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.nameserver.podLabels .Values.commonLabels ) "context" . ) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
      app.kubernetes.io/component: nameserver
  {{- if .Values.nameserver.updateStrategy }}
  strategy: {{- toYaml .Values.nameserver.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      annotations:
        {{- if .Values.nameserver.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.nameserver.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: nameserver
    spec:
     {{- include "rocketmq.imagePullSecrets" . | nindent 6 }}
      automountServiceAccountToken: {{ .Values.nameserver.automountServiceAccountToken }}
      {{- if .Values.nameserver.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.nameserver.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.nameserver.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.nameserver.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.nameserver.podAffinityPreset "component" "nameserver" "customLabels" $podLabels "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.nameserver.podAntiAffinityPreset "component" "nameserver" "customLabels" $podLabels "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nameserver.nodeAffinityPreset.type "key" .Values.nameserver.nodeAffinityPreset.key "values" .Values.nameserver.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.nameserver.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.nameserver.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.nameserver.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.nameserver.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.nameserver.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.nameserver.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.nameserver.priorityClassName }}
      priorityClassName: {{ .Values.nameserver.priorityClassName }}
      {{- end }}
      {{- if .Values.nameserver.schedulerName }}
      schedulerName: {{ .Values.nameserver.schedulerName }}
      {{- end }}
      {{- if .Values.nameserver.podSecurityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.nameserver.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: nameserver
          image: {{ include "rocketmq.image" .  }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.nameserver.containerSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.nameserver.containerSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          command: [ "/bin/sh" ]
          args: [ "-c", "./mqnamesrv -c /etc/rocketmq/nameserver.conf" ]
          env:
          {{- if .Values.nameserver.jvmOpt }}
            - name: JAVA_OPT
              value: {{ .Values.nameserver.jvmOpt | quote }}
          {{- end }}
            {{- if .Values.nameserver.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.nameserver.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.nameserver.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.nameserver.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.nameserver.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.nameserver.extraEnvVarsSecret "context" $) }}
            {{- end }}
          ports:
            - name: nameserver
              containerPort: {{ .Values.nameserver.containerPorts.nameserver }}
              protocol: TCP
            {{- if .Values.nameserver.extraPorts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.nameserver.extraPorts "context" $) | nindent 12 }}
            {{- end }}
          startupProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 5
            successThreshold: 1
            tcpSocket:
              port: nameserver
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 5
            successThreshold: 1
            tcpSocket:
              port: nameserver
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 5
            successThreshold: 1
            tcpSocket:
              port: nameserver
          {{- if .Values.nameserver.resources }}
          resources: {{ toYaml .Values.nameserver.resources | nindent 12 }}
          {{- else if ne .Values.nameserver.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" .Values.nameserver.resourcesPreset) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /etc/rocketmq/
      volumes:
        {{- if or .Values.nameserver.configuration .Values.nameserver.existingConfigmap }}
        - name: config
          configMap:
            name: {{ include "rocketmq.nameserver.configmapName" . }}
        {{- else }}
        - name: config
          emptyDir: {}
        {{- end }}      